/*
Asset Components

An Asset Component is an internal part of an Asset which is defined by the Hierarchy API.  Currently the following components are supported, * Bearings * Shafts

API version: 0.1
Contact: team.gob@enlight.skf.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PutComponentSpeedRequest struct for PutComponentSpeedRequest
type PutComponentSpeedRequest struct {
	Configuration SpeedConfiguration `json:"configuration"`
}

// NewPutComponentSpeedRequest instantiates a new PutComponentSpeedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutComponentSpeedRequest(configuration SpeedConfiguration) *PutComponentSpeedRequest {
	this := PutComponentSpeedRequest{}
	this.Configuration = configuration
	return &this
}

// NewPutComponentSpeedRequestWithDefaults instantiates a new PutComponentSpeedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutComponentSpeedRequestWithDefaults() *PutComponentSpeedRequest {
	this := PutComponentSpeedRequest{}
	return &this
}

// GetConfiguration returns the Configuration field value
func (o *PutComponentSpeedRequest) GetConfiguration() SpeedConfiguration {
	if o == nil {
		var ret SpeedConfiguration
		return ret
	}

	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value
// and a boolean to check if the value has been set.
func (o *PutComponentSpeedRequest) GetConfigurationOk() (*SpeedConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Configuration, true
}

// SetConfiguration sets field value
func (o *PutComponentSpeedRequest) SetConfiguration(v SpeedConfiguration) {
	o.Configuration = v
}

func (o PutComponentSpeedRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["configuration"] = o.Configuration
	}
	return json.Marshal(toSerialize)
}

type NullablePutComponentSpeedRequest struct {
	value *PutComponentSpeedRequest
	isSet bool
}

func (v NullablePutComponentSpeedRequest) Get() *PutComponentSpeedRequest {
	return v.value
}

func (v *NullablePutComponentSpeedRequest) Set(val *PutComponentSpeedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutComponentSpeedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutComponentSpeedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutComponentSpeedRequest(val *PutComponentSpeedRequest) *NullablePutComponentSpeedRequest {
	return &NullablePutComponentSpeedRequest{value: val, isSet: true}
}

func (v NullablePutComponentSpeedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutComponentSpeedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


