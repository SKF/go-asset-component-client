/*
Asset Components

An Asset Component is an internal part of an Asset which is defined by the Hierarchy API.  Currently the following components are supported, * Bearings * Shafts

API version: 0.1
Contact: team.gob@enlight.skf.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// UnknownSpeed struct for UnknownSpeed
type UnknownSpeed struct {
	Type string `json:"type"`
	Reason string `json:"reason"`
	Details string `json:"details"`
}

// NewUnknownSpeed instantiates a new UnknownSpeed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnknownSpeed(type_ string, reason string, details string) *UnknownSpeed {
	this := UnknownSpeed{}
	this.Type = type_
	this.Reason = reason
	this.Details = details
	return &this
}

// NewUnknownSpeedWithDefaults instantiates a new UnknownSpeed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnknownSpeedWithDefaults() *UnknownSpeed {
	this := UnknownSpeed{}
	return &this
}

// GetType returns the Type field value
func (o *UnknownSpeed) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *UnknownSpeed) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *UnknownSpeed) SetType(v string) {
	o.Type = v
}

// GetReason returns the Reason field value
func (o *UnknownSpeed) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *UnknownSpeed) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *UnknownSpeed) SetReason(v string) {
	o.Reason = v
}

// GetDetails returns the Details field value
func (o *UnknownSpeed) GetDetails() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *UnknownSpeed) GetDetailsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *UnknownSpeed) SetDetails(v string) {
	o.Details = v
}

func (o UnknownSpeed) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["reason"] = o.Reason
	}
	if true {
		toSerialize["details"] = o.Details
	}
	return json.Marshal(toSerialize)
}

type NullableUnknownSpeed struct {
	value *UnknownSpeed
	isSet bool
}

func (v NullableUnknownSpeed) Get() *UnknownSpeed {
	return v.value
}

func (v *NullableUnknownSpeed) Set(val *UnknownSpeed) {
	v.value = val
	v.isSet = true
}

func (v NullableUnknownSpeed) IsSet() bool {
	return v.isSet
}

func (v *NullableUnknownSpeed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnknownSpeed(val *UnknownSpeed) *NullableUnknownSpeed {
	return &NullableUnknownSpeed{value: val, isSet: true}
}

func (v NullableUnknownSpeed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnknownSpeed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


