/*
Asset Components

An Asset Component is an internal part of an Asset which is defined by the Hierarchy API.  Currently the following components are supported, * Bearings * Shafts

API version: 0.1
Contact: team.gob@enlight.skf.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetComponentSpeedResponse struct for GetComponentSpeedResponse
type GetComponentSpeedResponse struct {
	Calculated CalculatedSpeed `json:"calculated"`
	Configuration *SpeedConfiguration `json:"configuration,omitempty"`
}

// NewGetComponentSpeedResponse instantiates a new GetComponentSpeedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetComponentSpeedResponse(calculated CalculatedSpeed) *GetComponentSpeedResponse {
	this := GetComponentSpeedResponse{}
	this.Calculated = calculated
	return &this
}

// NewGetComponentSpeedResponseWithDefaults instantiates a new GetComponentSpeedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetComponentSpeedResponseWithDefaults() *GetComponentSpeedResponse {
	this := GetComponentSpeedResponse{}
	return &this
}

// GetCalculated returns the Calculated field value
func (o *GetComponentSpeedResponse) GetCalculated() CalculatedSpeed {
	if o == nil {
		var ret CalculatedSpeed
		return ret
	}

	return o.Calculated
}

// GetCalculatedOk returns a tuple with the Calculated field value
// and a boolean to check if the value has been set.
func (o *GetComponentSpeedResponse) GetCalculatedOk() (*CalculatedSpeed, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Calculated, true
}

// SetCalculated sets field value
func (o *GetComponentSpeedResponse) SetCalculated(v CalculatedSpeed) {
	o.Calculated = v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *GetComponentSpeedResponse) GetConfiguration() SpeedConfiguration {
	if o == nil || o.Configuration == nil {
		var ret SpeedConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetComponentSpeedResponse) GetConfigurationOk() (*SpeedConfiguration, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *GetComponentSpeedResponse) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given SpeedConfiguration and assigns it to the Configuration field.
func (o *GetComponentSpeedResponse) SetConfiguration(v SpeedConfiguration) {
	o.Configuration = &v
}

func (o GetComponentSpeedResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["calculated"] = o.Calculated
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	return json.Marshal(toSerialize)
}

type NullableGetComponentSpeedResponse struct {
	value *GetComponentSpeedResponse
	isSet bool
}

func (v NullableGetComponentSpeedResponse) Get() *GetComponentSpeedResponse {
	return v.value
}

func (v *NullableGetComponentSpeedResponse) Set(val *GetComponentSpeedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetComponentSpeedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetComponentSpeedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetComponentSpeedResponse(val *GetComponentSpeedResponse) *NullableGetComponentSpeedResponse {
	return &NullableGetComponentSpeedResponse{value: val, isSet: true}
}

func (v NullableGetComponentSpeedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetComponentSpeedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


