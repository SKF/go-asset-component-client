/*
Asset Components

An Asset Component is an internal part of an Asset which is defined by the Hierarchy API.  Currently the following components are supported, * Bearings * Shafts

API version: 0.1
Contact: team.gob@enlight.skf.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetComponentRelationsResponseContext struct for GetComponentRelationsResponseContext
type GetComponentRelationsResponseContext struct {
	ComponentId string `json:"componentId"`
}

// NewGetComponentRelationsResponseContext instantiates a new GetComponentRelationsResponseContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetComponentRelationsResponseContext(componentId string) *GetComponentRelationsResponseContext {
	this := GetComponentRelationsResponseContext{}
	this.ComponentId = componentId
	return &this
}

// NewGetComponentRelationsResponseContextWithDefaults instantiates a new GetComponentRelationsResponseContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetComponentRelationsResponseContextWithDefaults() *GetComponentRelationsResponseContext {
	this := GetComponentRelationsResponseContext{}
	return &this
}

// GetComponentId returns the ComponentId field value
func (o *GetComponentRelationsResponseContext) GetComponentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ComponentId
}

// GetComponentIdOk returns a tuple with the ComponentId field value
// and a boolean to check if the value has been set.
func (o *GetComponentRelationsResponseContext) GetComponentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComponentId, true
}

// SetComponentId sets field value
func (o *GetComponentRelationsResponseContext) SetComponentId(v string) {
	o.ComponentId = v
}

func (o GetComponentRelationsResponseContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["componentId"] = o.ComponentId
	}
	return json.Marshal(toSerialize)
}

type NullableGetComponentRelationsResponseContext struct {
	value *GetComponentRelationsResponseContext
	isSet bool
}

func (v NullableGetComponentRelationsResponseContext) Get() *GetComponentRelationsResponseContext {
	return v.value
}

func (v *NullableGetComponentRelationsResponseContext) Set(val *GetComponentRelationsResponseContext) {
	v.value = val
	v.isSet = true
}

func (v NullableGetComponentRelationsResponseContext) IsSet() bool {
	return v.isSet
}

func (v *NullableGetComponentRelationsResponseContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetComponentRelationsResponseContext(val *GetComponentRelationsResponseContext) *NullableGetComponentRelationsResponseContext {
	return &NullableGetComponentRelationsResponseContext{value: val, isSet: true}
}

func (v NullableGetComponentRelationsResponseContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetComponentRelationsResponseContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


