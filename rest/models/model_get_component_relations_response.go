/*
Asset Components

An Asset Component is an internal part of an Asset which is defined by the Hierarchy API.  Currently the following components are supported, * Bearings * Shafts

API version: 0.1
Contact: team.gob@enlight.skf.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetComponentRelationsResponse struct for GetComponentRelationsResponse
type GetComponentRelationsResponse struct {
	Relations []Relation `json:"relations"`
	Links GetComponentRelationsResponseLinks `json:"links"`
	Context GetComponentRelationsResponseContext `json:"context"`
}

// NewGetComponentRelationsResponse instantiates a new GetComponentRelationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetComponentRelationsResponse(relations []Relation, links GetComponentRelationsResponseLinks, context GetComponentRelationsResponseContext) *GetComponentRelationsResponse {
	this := GetComponentRelationsResponse{}
	this.Relations = relations
	this.Links = links
	this.Context = context
	return &this
}

// NewGetComponentRelationsResponseWithDefaults instantiates a new GetComponentRelationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetComponentRelationsResponseWithDefaults() *GetComponentRelationsResponse {
	this := GetComponentRelationsResponse{}
	return &this
}

// GetRelations returns the Relations field value
func (o *GetComponentRelationsResponse) GetRelations() []Relation {
	if o == nil {
		var ret []Relation
		return ret
	}

	return o.Relations
}

// GetRelationsOk returns a tuple with the Relations field value
// and a boolean to check if the value has been set.
func (o *GetComponentRelationsResponse) GetRelationsOk() ([]Relation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Relations, true
}

// SetRelations sets field value
func (o *GetComponentRelationsResponse) SetRelations(v []Relation) {
	o.Relations = v
}

// GetLinks returns the Links field value
func (o *GetComponentRelationsResponse) GetLinks() GetComponentRelationsResponseLinks {
	if o == nil {
		var ret GetComponentRelationsResponseLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *GetComponentRelationsResponse) GetLinksOk() (*GetComponentRelationsResponseLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *GetComponentRelationsResponse) SetLinks(v GetComponentRelationsResponseLinks) {
	o.Links = v
}

// GetContext returns the Context field value
func (o *GetComponentRelationsResponse) GetContext() GetComponentRelationsResponseContext {
	if o == nil {
		var ret GetComponentRelationsResponseContext
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *GetComponentRelationsResponse) GetContextOk() (*GetComponentRelationsResponseContext, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *GetComponentRelationsResponse) SetContext(v GetComponentRelationsResponseContext) {
	o.Context = v
}

func (o GetComponentRelationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["relations"] = o.Relations
	}
	if true {
		toSerialize["links"] = o.Links
	}
	if true {
		toSerialize["context"] = o.Context
	}
	return json.Marshal(toSerialize)
}

type NullableGetComponentRelationsResponse struct {
	value *GetComponentRelationsResponse
	isSet bool
}

func (v NullableGetComponentRelationsResponse) Get() *GetComponentRelationsResponse {
	return v.value
}

func (v *NullableGetComponentRelationsResponse) Set(val *GetComponentRelationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetComponentRelationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetComponentRelationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetComponentRelationsResponse(val *GetComponentRelationsResponse) *NullableGetComponentRelationsResponse {
	return &NullableGetComponentRelationsResponse{value: val, isSet: true}
}

func (v NullableGetComponentRelationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetComponentRelationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


