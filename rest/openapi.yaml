openapi: 3.0.0
info:
  title: Asset Components
  version: '0.1'
  description: |-
    An Asset Component is an internal part of an Asset which is defined by the Hierarchy API.

    Currently the following components are supported,
    * Bearings
    * Shafts
  contact:
    name: Team G.O.B
    url: 'https://skftechnicalsupport.zendesk.com/'
    email: team.gob@enlight.skf.com
servers:
  - url: 'https://api.sandbox.asset-components.enlight.skf.com/'
tags:
  - name: Manage
  - name: Query
  - name: External Relations
    description: Handle relations between a component and an external source
security:
  - EnlightSSO: []
  - ClientID: []
paths:
  /components:
    post:
      operationId: create-component
      summary: Create a new component
      description: 'The caller is required to have the `ASSET_COMPONENTS::CREATE_COMPONENT` action on the `asset`.'
      tags:
        - Manage
      requestBody:
        content:
          application/json:
            schema:
              title: CreateComponentRequest
              type: object
              required:
                - asset
                - type
                - position
              properties:
                id:
                  type: string
                  format: uuid
                  description: Unique identifier for a component
                asset:
                  type: string
                  format: uuid
                  description: Hierarchy Asset ID where this component is located within
                attachedTo:
                  type: string
                  format: uuid
                  description: 'Identifier to the component that this one is attached to, required for bearings'
                type:
                  type: string
                  description: What kind of component it is. Will decide what other attributes can be used.
                  enum:
                    - bearing
                    - shaft
                position:
                  type: integer
                  description: A non unique identifier within the asset to help locate the component
                  minimum: 1
                origin:
                  description: An external identifier indicating that this component was imported from another system
                  title: Origin
                  type: object
                  required:
                    - id
                    - type
                    - provider
                  properties:
                    id:
                      type: string
                      description: The external identifier of the resource
                      example: 372812
                    type:
                      type: string
                      description: The type of the provided `provider` value
                      example: '@Analyst'
                    provider:
                      type: string
                      description: 'An identifier for the provider of the origin, usually the integration identifier'
                      example: 350b180d-e9eb-48a7-ba9a-ce1dae66fd44
                fixedSpeed:
                  type: number
                  description: 'The fixed rotation speed of the shaft, expressed in RPM'
                  minimum: 0
                positionDescription:
                  type: string
                  description: A human-readable description of where the bearing is located
                designation:
                  type: string
                  description: Bearing model number
                  example: '66000'
                manufacturer:
                  type: string
                  description: 'Who is producing the bearing, usually a company name'
                  example: SKF
                serialNumber:
                  type: string
                  description: A manufacturer designated identifier for a specific bearing
                rotatingRing:
                  type: string
                  description: Indicating what ring or rings that is rotating under operating conditions
                  enum:
                    - inner
                    - outer
                    - both
                shaftSide:
                  type: string
                  description: What side of the shaft the bearing is mounted
                  enum:
                    - de
                    - nde
                    - unknown
            example:
              asset: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              type: shaft
              position: 1
      responses:
        '201':
          description: 'Upon successful creation the component is returned, with an assigned id'
          content:
            application/json:
              schema:
                title: CreateComponentResponse
                type: object
                required:
                  - asset
                  - type
                  - position
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Unique identifier for a component
                  asset:
                    type: string
                    format: uuid
                    description: Hierarchy Asset ID where this component is located within
                  attachedTo:
                    type: string
                    format: uuid
                    description: 'Identifier to the component that this one is attached to, required for bearings'
                  type:
                    type: string
                    description: What kind of component it is. Will decide what other attributes can be used.
                    enum:
                      - bearing
                      - shaft
                  position:
                    type: integer
                    description: A non unique identifier within the asset to help locate the component
                    minimum: 1
                  origin:
                    description: An external identifier indicating that this component was imported from another system
                    title: Origin
                    type: object
                    required:
                      - id
                      - type
                      - provider
                    properties:
                      id:
                        type: string
                        description: The external identifier of the resource
                        example: 372812
                      type:
                        type: string
                        description: The type of the provided `provider` value
                        example: '@Analyst'
                      provider:
                        type: string
                        description: 'An identifier for the provider of the origin, usually the integration identifier'
                        example: 350b180d-e9eb-48a7-ba9a-ce1dae66fd44
                  fixedSpeed:
                    type: number
                    description: 'The fixed rotation speed of the shaft, expressed in RPM'
                    minimum: 0
                  positionDescription:
                    type: string
                    description: A human-readable description of where the bearing is located
                  designation:
                    type: string
                    description: Bearing model number
                    example: '66000'
                  manufacturer:
                    type: string
                    description: 'Who is producing the bearing, usually a company name'
                    example: SKF
                  serialNumber:
                    type: string
                    description: A manufacturer designated identifier for a specific bearing
                  rotatingRing:
                    type: string
                    description: Indicating what ring or rings that is rotating under operating conditions
                    enum:
                      - inner
                      - outer
                      - both
                  shaftSide:
                    type: string
                    description: What side of the shaft the bearing is mounted
                    enum:
                      - de
                      - nde
                      - unknown
              example:
                id: 6217c993-b6cd-4808-bda8-fd2a242b949a
                asset: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                type: shaft
                position: 1
        '400':
          $ref: '#/components/responses/Problem'
        '401':
          $ref: '#/components/responses/Problem'
        '403':
          $ref: '#/components/responses/Problem'
        '409':
          $ref: '#/components/responses/Problem'
        '429':
          $ref: '#/components/responses/Problem'
        '500':
          $ref: '#/components/responses/Problem'
  '/components/{component}':
    parameters:
      - name: component
        in: path
        required: true
        description: 'Component identifier, a UUID'
        schema:
          type: string
          format: uuid
    get:
      operationId: get-component-by-id
      summary: Get an existing component by its identifier
      description: 'The caller is required to have the `ASSET_COMPONENTS::GET_COMPONENT_BY_ID` action on the `component`.'
      tags:
        - Query
      responses:
        '200':
          description: The requested component
          content:
            application/json:
              schema:
                title: GetComponentResponse
                type: object
                required:
                  - asset
                  - type
                  - position
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Unique identifier for a component
                  asset:
                    type: string
                    format: uuid
                    description: Hierarchy Asset ID where this component is located within
                  attachedTo:
                    type: string
                    format: uuid
                    description: 'Identifier to the component that this one is attached to, required for bearings'
                  type:
                    type: string
                    description: What kind of component it is. Will decide what other attributes can be used.
                    enum:
                      - bearing
                      - shaft
                  position:
                    type: integer
                    description: A non unique identifier within the asset to help locate the component
                    minimum: 1
                  origin:
                    description: An external identifier indicating that this component was imported from another system
                    title: Origin
                    type: object
                    required:
                      - id
                      - type
                      - provider
                    properties:
                      id:
                        type: string
                        description: The external identifier of the resource
                        example: 372812
                      type:
                        type: string
                        description: The type of the provided `provider` value
                        example: '@Analyst'
                      provider:
                        type: string
                        description: 'An identifier for the provider of the origin, usually the integration identifier'
                        example: 350b180d-e9eb-48a7-ba9a-ce1dae66fd44
                  fixedSpeed:
                    type: number
                    description: 'The fixed rotation speed of the shaft, expressed in RPM'
                    minimum: 0
                  positionDescription:
                    type: string
                    description: A human-readable description of where the bearing is located
                  designation:
                    type: string
                    description: Bearing model number
                    example: '66000'
                  manufacturer:
                    type: string
                    description: 'Who is producing the bearing, usually a company name'
                    example: SKF
                  serialNumber:
                    type: string
                    description: A manufacturer designated identifier for a specific bearing
                  rotatingRing:
                    type: string
                    description: Indicating what ring or rings that is rotating under operating conditions
                    enum:
                      - inner
                      - outer
                      - both
                  shaftSide:
                    type: string
                    description: What side of the shaft the bearing is mounted
                    enum:
                      - de
                      - nde
                      - unknown
              example:
                id: 6217c993-b6cd-4808-bda8-fd2a242b949a
                asset: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                type: shaft
                position: 1
        '401':
          $ref: '#/components/responses/Problem'
        '403':
          $ref: '#/components/responses/Problem'
        '404':
          $ref: '#/components/responses/Problem'
        '429':
          $ref: '#/components/responses/Problem'
        '500':
          $ref: '#/components/responses/Problem'
    patch:
      operationId: update-component
      summary: Update an existing component
      description: |-
        As of now the endpoint requires you to send in the whole body including fields that is not intended for the update.

        The caller is required to have the `ASSET_COMPONENTS::UPDATE_COMPONENT` action on the `component`.
      tags:
        - Manage
      requestBody:
        content:
          application/json:
            schema:
              title: UpdateComponentRequest
              type: object
              required:
                - asset
                - type
                - position
              properties:
                id:
                  type: string
                  format: uuid
                  description: Unique identifier for a component
                asset:
                  type: string
                  format: uuid
                  description: Hierarchy Asset ID where this component is located within
                attachedTo:
                  type: string
                  format: uuid
                  description: 'Identifier to the component that this one is attached to, required for bearings'
                type:
                  type: string
                  description: What kind of component it is. Will decide what other attributes can be used.
                  enum:
                    - bearing
                    - shaft
                position:
                  type: integer
                  description: A non unique identifier within the asset to help locate the component
                  minimum: 1
                origin:
                  description: An external identifier indicating that this component was imported from another system
                  title: Origin
                  type: object
                  required:
                    - id
                    - type
                    - provider
                  properties:
                    id:
                      type: string
                      description: The external identifier of the resource
                      example: 372812
                    type:
                      type: string
                      description: The type of the provided `provider` value
                      example: '@Analyst'
                    provider:
                      type: string
                      description: 'An identifier for the provider of the origin, usually the integration identifier'
                      example: 350b180d-e9eb-48a7-ba9a-ce1dae66fd44
                fixedSpeed:
                  type: number
                  description: 'The fixed rotation speed of the shaft, expressed in RPM'
                  minimum: 0
                positionDescription:
                  type: string
                  description: A human-readable description of where the bearing is located
                designation:
                  type: string
                  description: Bearing model number
                  example: '66000'
                manufacturer:
                  type: string
                  description: 'Who is producing the bearing, usually a company name'
                  example: SKF
                serialNumber:
                  type: string
                  description: A manufacturer designated identifier for a specific bearing
                rotatingRing:
                  type: string
                  description: Indicating what ring or rings that is rotating under operating conditions
                  enum:
                    - inner
                    - outer
                    - both
                shaftSide:
                  type: string
                  description: What side of the shaft the bearing is mounted
                  enum:
                    - de
                    - nde
                    - unknown
            example:
              asset: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              type: shaft
              position: 2
      responses:
        '200':
          description: The state of the component after the update
          content:
            application/json:
              schema:
                title: UpdateComponentResponse
                type: object
                required:
                  - asset
                  - type
                  - position
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Unique identifier for a component
                  asset:
                    type: string
                    format: uuid
                    description: Hierarchy Asset ID where this component is located within
                  attachedTo:
                    type: string
                    format: uuid
                    description: 'Identifier to the component that this one is attached to, required for bearings'
                  type:
                    type: string
                    description: What kind of component it is. Will decide what other attributes can be used.
                    enum:
                      - bearing
                      - shaft
                  position:
                    type: integer
                    description: A non unique identifier within the asset to help locate the component
                    minimum: 1
                  origin:
                    description: An external identifier indicating that this component was imported from another system
                    title: Origin
                    type: object
                    required:
                      - id
                      - type
                      - provider
                    properties:
                      id:
                        type: string
                        description: The external identifier of the resource
                        example: 372812
                      type:
                        type: string
                        description: The type of the provided `provider` value
                        example: '@Analyst'
                      provider:
                        type: string
                        description: 'An identifier for the provider of the origin, usually the integration identifier'
                        example: 350b180d-e9eb-48a7-ba9a-ce1dae66fd44
                  fixedSpeed:
                    type: number
                    description: 'The fixed rotation speed of the shaft, expressed in RPM'
                    minimum: 0
                  positionDescription:
                    type: string
                    description: A human-readable description of where the bearing is located
                  designation:
                    type: string
                    description: Bearing model number
                    example: '66000'
                  manufacturer:
                    type: string
                    description: 'Who is producing the bearing, usually a company name'
                    example: SKF
                  serialNumber:
                    type: string
                    description: A manufacturer designated identifier for a specific bearing
                  rotatingRing:
                    type: string
                    description: Indicating what ring or rings that is rotating under operating conditions
                    enum:
                      - inner
                      - outer
                      - both
                  shaftSide:
                    type: string
                    description: What side of the shaft the bearing is mounted
                    enum:
                      - de
                      - nde
                      - unknown
              example:
                id: 6217c993-b6cd-4808-bda8-fd2a242b949a
                asset: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                type: shaft
                position: 2
        '400':
          $ref: '#/components/responses/Problem'
        '401':
          $ref: '#/components/responses/Problem'
        '403':
          $ref: '#/components/responses/Problem'
        '404':
          $ref: '#/components/responses/Problem'
        '429':
          $ref: '#/components/responses/Problem'
        '500':
          $ref: '#/components/responses/Problem'
    delete:
      operationId: delete-component
      summary: Delete a specific component and its attached components
      description: |-
        This endpoint will delete the targeted component and any attached components. The operation is idempotent, so deleting
        twice in a row should both result in `204 No Content` even if the second operation did not do anything.

        The caller is required to have the `ASSET_COMPONENTS::DELETE_COMPONENT` action on the `component`.
      tags:
        - Manage
      responses:
        '204':
          description: If the requested component has been deleted
        '401':
          $ref: '#/components/responses/Problem'
        '403':
          $ref: '#/components/responses/Problem'
        '429':
          $ref: '#/components/responses/Problem'
        '500':
          $ref: '#/components/responses/Problem'
  '/components/{component}/relations':
    parameters:
      - name: component
        in: path
        required: true
        description: Id for the component
        schema:
          type: string
    get:
      operationId: get-component-relations
      summary: List all Component relations
      description: |-
        Lists all known relations to the specified Component.

        The list ordering should not be relied upon, it may change in the future.

        The paginated response is controlled by the `limit` and `continuation_token`, see the `links` field in the response to navigate through all the relations.

         The caller is required to have the `ASSET_COMPONENTS::GET_RELATIONS` on the Component.
      tags:
        - External Relations
      parameters:
        - name: limit
          in: query
          required: false
          description: number of results returned
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
            maximum: 100
        - name: continuation_token
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of all relations which include a specific asset component
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetComponentRelationsResponse'
        '401':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '403':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '404':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '429':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '500':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
    put:
      operationId: update-component-relation
      summary: Create a Relation to a Component
      description: |
        Creates a new relation between the specified component and an external source.

        One component may have many relations of the same `source`/`type` but only once to the identical `(source, type, id)` triple.

        The creation/update operation is idempotent.

        The caller is required to have the `ASSET_COMPONENTS::CREATE_RELATION` action on the Component.
      tags:
        - External Relations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relation'
            examples:
              Measurement Location Relation:
                value:
                  source: hierarchy
                  type: measurement_location_relation
                  id: 0ca278c6-8cae-41db-ac6b-4d191be914cf
      responses:
        '204':
          description: Relation is created or already exists
        '400':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '401':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '403':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '404':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '429':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '500':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
  '/relations/{source}/{type}/{id}/components':
    parameters:
      - name: source
        in: path
        required: true
        description: Name of the source system where the external part of the relation is located
        schema:
          $ref: '#/components/schemas/RelationSource'
      - name: type
        in: path
        required: true
        description: Type of the `id` part of the relation
        schema:
          $ref: '#/components/schemas/RelationType'
      - name: id
        in: path
        required: true
        description: External ID for the specified `type`
        schema:
          type: string
    get:
      operationId: get-related-components
      summary: List all components that contain a Relation
      description: |-
        Lists all components which contain a specific relation.

        The list ordering should not be relied upon, it may change in the future.

        The paginated response is controlled by the `limit` and `continuation_token`, see the `links` field in the response to navigate through all the relations.

        The caller is required to have the `ASSET_COMPONENTS::GET_RELATIONS` action on the Asset.
      tags:
        - External Relations
      parameters:
        - name: limit
          in: query
          required: false
          description: number of results returned
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
            maximum: 100
        - name: continuation_token
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of all components which include a specific relation to an external source
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelatedComponentsResponse'
        '401':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '403':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '404':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '429':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '500':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
  '/relations/{source}/{type}/{id}/components/{component}':
    parameters:
      - name: source
        in: path
        required: true
        description: Name of the source system where the external part of the relation is located
        schema:
          $ref: '#/components/schemas/RelationSource'
      - name: type
        in: path
        required: true
        description: Type of the `id` part of the relation
        schema:
          $ref: '#/components/schemas/RelationType'
      - name: id
        in: path
        required: true
        description: External ID for the specified `type`
        schema:
          type: string
      - name: component
        in: path
        required: true
        description: Component ID
        schema:
          type: string
    delete:
      operationId: delete-component-relation
      summary: Remove an existing relation to a specific Component
      description: |-
        Remove an existing relation to a specific component.

        The delete operation is idempotent.

        The caller is required to have the `ASSET_COMPONENTS::DELETE_RELATION` action on the Component.
      tags:
        - External Relations
      responses:
        '204':
          description: The relation does no longer exists
        '401':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '403':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '404':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '429':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '500':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
  '/provisional/speed/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: Id of component or measurment location
        schema:
          type: string
      - name: type
        in: query
        required: true
        description: type of the provided id
        schema:
          type: string
    get:
      operationId: get-related-speed
      summary: List related speed
      description: Lists speeds related to a component or a measurment location
      tags:
        - Speed
      deprecated: true
      responses:
        '200':
          description: List of all related speeds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelatedSpeedResponse'
        '401':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '403':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '404':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '429':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
        '500':
          description: Temporary response model for all Problems
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemResponse'
  '/assets/{asset}/components':
    parameters:
      - name: asset
        in: path
        required: true
        description: Id of asset
        schema:
          type: string
      - name: type
        in: query
        required: false
        description: limit response only to include provided component types
        schema:
          type: array
          items:
            type: string
    get:
      operationId: get-asset-components
      summary: List components under an asset
      description: Lists all components under an asset
      responses:
        '200':
          description: List of all components attached to a asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssetComponentsResponse'
        '400':
          $ref: '#/components/responses/Problem'
        '401':
          $ref: '#/components/responses/Problem'
        '403':
          $ref: '#/components/responses/Problem'
        '404':
          $ref: '#/components/responses/Problem'
        '429':
          $ref: '#/components/responses/Problem'
        '500':
          $ref: '#/components/responses/Problem'
  '/origins/{provider}/{provider_type}/{id}/component':
    parameters:
      - name: provider
        in: path
        required: true
        description: 'An identifier for the provider of the origin, usually the integration identifier'
        example: 350b180d-e9eb-48a7-ba9a-ce1dae66fd44
        schema:
          type: string
      - name: provider_type
        in: path
        required: true
        description: The type of the provided `provider` value
        example: '@Analyst'
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: The external identifier of the resource
        example: 372812
        schema:
          type: string
    get:
      operationId: get-component-by-origin
      summary: Get component by its origin
      description: |-
        Find the identifier of a component by its `origin` that can be set when creating a component.

        If no component exists with the provided origin the endpoint returns 404.

        The caller is required to have the `ASSET_COMPONENTS::LOOKUP_ORIGIN` action.
      tags:
        - Origins
      responses:
        '200':
          description: A component was found with the provided origin
          content:
            application/json:
              schema:
                title: GetComponentByOriginResponse
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                    format: uuid
                    description: The unique identifer for a component that has the specified origin
        '400':
          $ref: '#/components/responses/Problem'
        '401':
          $ref: '#/components/responses/Problem'
        '403':
          $ref: '#/components/responses/Problem'
        '404':
          $ref: '#/components/responses/Problem'
        '429':
          $ref: '#/components/responses/Problem'
        '500':
          $ref: '#/components/responses/Problem'
components:
  securitySchemes:
    EnlightSSO:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Access Token from Enlight SSO API
    ClientID:
      name: X-Client-ID
      type: apiKey
      in: header
      description: 'Optional Client-ID, which is used for rate-limiting. Not supplying one will decrease limit'
  schemas:
    Component:
      type: object
      required:
        - asset
        - type
        - position
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for a component
        asset:
          type: string
          format: uuid
          description: Hierarchy Asset ID where this component is located within
        attachedTo:
          type: string
          format: uuid
          description: 'Identifier to the component that this one is attached to, required for bearings'
        type:
          type: string
          description: What kind of component it is. Will decide what other attributes can be used.
          enum:
            - bearing
            - shaft
        position:
          type: integer
          description: A non unique identifier within the asset to help locate the component
          minimum: 1
        origin:
          description: An external identifier indicating that this component was imported from another system
          title: Origin
          type: object
          required:
            - id
            - type
            - provider
          properties:
            id:
              type: string
              description: The external identifier of the resource
              example: 372812
            type:
              type: string
              description: The type of the provided `provider` value
              example: '@Analyst'
            provider:
              type: string
              description: 'An identifier for the provider of the origin, usually the integration identifier'
              example: 350b180d-e9eb-48a7-ba9a-ce1dae66fd44
        fixedSpeed:
          type: number
          description: 'The fixed rotation speed of the shaft, expressed in RPM'
          minimum: 0
        positionDescription:
          type: string
          description: A human-readable description of where the bearing is located
        designation:
          type: string
          description: Bearing model number
          example: '66000'
        manufacturer:
          type: string
          description: 'Who is producing the bearing, usually a company name'
          example: SKF
        serialNumber:
          type: string
          description: A manufacturer designated identifier for a specific bearing
        rotatingRing:
          type: string
          description: Indicating what ring or rings that is rotating under operating conditions
          enum:
            - inner
            - outer
            - both
        shaftSide:
          type: string
          description: What side of the shaft the bearing is mounted
          enum:
            - de
            - nde
            - unknown
    GetComponentRelationsResponse:
      type: object
      properties:
        relations:
          type: array
          items:
            $ref: '#/components/schemas/Relation'
        links:
          type: object
          properties:
            self:
              type: string
            next:
              type: string
          required:
            - self
        context:
          type: object
          properties:
            componentId:
              type: string
          required:
            - componentId
      required:
        - relations
        - links
        - context
      example:
        relations:
          - source: hierarchy
            type: measurement_location_relation
            id: 4614814c-6468-452a-bc81-ab3dd8ef4a23
          - source: hierarchy
            type: measurement_location_relation
            id: 0ca278c6-8cae-41db-ac6b-4d191be914cf
        links:
          self: /components/92c51b32-8378-4e7b-b0ff-41f8c5344bae/relations?limit=2
          next: /components/92c51b32-8378-4e7b-b0ff-41f8c5344bae/relations?limit=2&continuation_token=3bf
        context:
          componentId: 92c51b32-8378-4e7b-b0ff-41f8c5344bae
    GetRelatedComponentsResponse:
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/RelatedComponent'
        links:
          type: object
          properties:
            self:
              type: string
            next:
              type: string
          required:
            - self
        context:
          type: object
          properties:
            source:
              $ref: '#/components/schemas/RelationSource'
            type:
              $ref: '#/components/schemas/RelationType'
            id:
              type: string
          required:
            - source
            - type
            - id
      required:
        - components
        - links
        - context
      example:
        value:
          components:
            id: 92c51b32-8378-4e7b-b0ff-41f8c5344bae
          links:
            self: /relations/hierarchy/measurement_location_relation/0ca278c6-8cae-41db-ac6b-4d191be914cf/components
          context:
            source: hierarchy
            type: measurement_location_relation
            id: 0ca278c6-8cae-41db-ac6b-4d191be914cf
    ProblemResponse:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        correlationId:
          type: string
      required:
        - type
        - title
        - status
        - detail
        - correlationId
    Relation:
      title: Relation
      type: object
      description: |-
        A description of a correlation between an external source to a specific component.

        One component may only have one unique triple `(source, type, id)`.
      properties:
        source:
          $ref: '#/components/schemas/RelationSource'
        type:
          $ref: '#/components/schemas/RelationType'
        id:
          type: string
          description: Identifier which in context of the source and type identifies some resource in the external source system.
      required:
        - source
        - type
        - id
    RelationType:
      title: RelationType
      type: string
      description: 'The type which the id is referring to, might be extended in the future'
      enum:
        - measurement_location_relation
    RelatedComponent:
      title: RelatedComponent
      type: object
      properties:
        id:
          type: string
          description: ComponentID
      required:
        - id
    RelationSource:
      title: RelationSource
      type: string
      enum:
        - hierarchy
    GetRelatedSpeedResponse:
      type: object
      properties:
        fixedspeed:
          type: object
          properties:
            id:
              type: string
            speed:
              type: number
            speedgroup:
              type: string
            type:
              type: string
          required:
            - id
            - speed
            - speedgroup
            - type
        context:
          type: object
          properties:
            id:
              type: string
          required:
            - id
      required:
        - context
        - fixedspeed
    GetAssetComponentsResponse:
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/Component'
        count:
          type: integer
  responses:
    Problem:
      description: Temporary response model for all Problems
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'

